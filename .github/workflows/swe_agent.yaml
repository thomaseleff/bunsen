# This workflow is triggered by the Bunsen issue-agent when a specific label
#   is added to a GitHub issue. It sets up the environment and runs the
#   Beaker swe-agent to process the issue.

name: Beaker (swe-agent)

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'The name of the GitHub repository.'
        required: true
        type: str
      repo_branch:
        description: 'The branch of the Github repository.'
        required: true
        type: str
      installation_id:
        description: 'The GitHub App installation ID to use for authentication.'
        required: true
        type: number
      issue_id:
        description: 'The id of the GitHub issue to process.'
        required: true
        type: number

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build_and_run:
    runs-on: ubuntu-latest
    environment: swe-agent
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUNSEN_GITHUB_APP_ID: ${{ secrets.BUNSEN_GITHUB_APP_ID }}
      BUNSEN_GITHUB_PRIVATE_KEY: ${{ secrets.BUNSEN_GITHUB_PRIVATE_KEY }}
      BUNSEN_GITHUB_WEBHOOK_SECRET: ${{ secrets.BUNSEN_GITHUB_WEBHOOK_SECRET }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LITELLM_DROP_PARAMS: True  # Usually required, depends on the supported model parameters

    steps:

      # Check out the repository code
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.repo_branch}}
          path: bunsen

      # Check out swe-agent
      - name: Checkout swe-agent
        uses: actions/checkout@v4
        with:
          ref: v1.1.0  # Reference a release tag
          repository: SWE-agent/SWE-agent
          path: swe-agent

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # Upgrade pip
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      # Install bunsen
      #  Ensures all named version dependencies are met

      - name: Install bunsen
        run: |
          pip install ./bunsen

      # Install swe-agent
      - name: Install swe-agent
        run: |
          pip install --editable ./swe-agent && pip install google-cloud-aiplatform

      # Run the Coding Agent
      - name: Run swe-agent
        run: cd ./bunsen && python -m bunsen.swe_agent.agent --repo_name ${{ github.event.inputs.repo_name}} --installation_id ${{ github.event.inputs.installation_id}} --issue_id ${{ github.event.inputs.issue_id }}

